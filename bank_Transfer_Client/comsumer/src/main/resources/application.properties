server.port=444
# 指定发布的微服务名（以后调用时，只需该名称即可访问该服务）
spring.application.name=perConsumer
eureka.instance.hostname=10.1.14.42
# 指定服务注册中心的地址                   
eureka.client.serviceUrl.defaultZone=http://10.1.14.42:1001/eureka/
# 指定服务提供者的地址
per.servicePath=http://per/client/findById
ribbon.eureka.enable=true
feign.hystrix.enabled=true
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=5000
#helloService.ribbon.listOfServers=http://10.1.14.42:1002

spring.activemq.broker-url=tcp://10.1.14.42:61616
# 在考虑结束之前等待的时间
#spring.activemq.close-timeout=15s
# 默认代理URL是否应该在内存中。如果指定了显式代理，则忽略此值。
spring.activemq.in-memory=true 
# 是否在回滚回滚消息之前停止消息传递。这意味着当启用此命令时，消息顺序不会被保留。
spring.activemq.non-blocking-redelivery=false
# 等待消息发送响应的时间。设置为0等待永远。
spring.activemq.send-timeout=0
#默认情况下activemq提供的是queue模式，若要使用topic模式需要配置下面配置 false=queue  true=topic
spring.jms.pub-sub-domain=false
#账号
spring.activemq.user=admin
# 密码
spring.activemq.password=admin
#自己定义队列名称
myqueue=boot-test-active


#redis 
# Redis数据库索引（默认为0） 
spring.redis.database=0 
# Redis服务器地址 
spring.redis.host=10.1.14.37 
# Redis服务器连接端口 
spring.redis.port=6379 
# Redis服务器连接密码（默认为空） 
spring.redis.password= 
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8 
# 连接池最大阻塞等待时间（使用负值表示没有限制） 
spring.redis.pool.max-wait=-1 
# 连接池中的最大空闲连接 
spring.redis.pool.max-idle=8 
# 连接池中的最小空闲连接 
spring.redis.pool.min-idle=0 
# 连接超时时间（毫秒） 
spring.redis.timeout=5000
spring.mvc.view.suffix=.jsp
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=5000
#helloService.ribbon.listOfServers=http://10.1.14.42:1002

spring.mvc.view.prefix=/
